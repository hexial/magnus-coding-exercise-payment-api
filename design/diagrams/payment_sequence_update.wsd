@startuml payment_sequence_update

actor Client
database "PostgreSQL"

Client -> "nginx": HTTP GET
"nginx" -> "gin-gonic/gin": HTTP GET
"gin-gonic/gin" -> "main.FakeAuthentication": gin.Context
"main.FakeAuthentication" --> "gin-gonic/gin": OrganisationID
"gin-gonic/gin" -> "payment.Handler": Update(...)
"payment.Handler" -> "payment.Resource": Update(...)
"payment.Resource" -> "payment.transformToDB": models.PaymentInput
"payment.transformToDB" -> "payment.Resource": models.PaymentDB
"payment.Resource" -> "validation": Validate.StructCtx(...)
"validation" --> "payment.Resource": error
"payment.Resource" -> "storage.Payment": Update(...)
"storage.Payment" -> "gorm.io": tx.Model(...).Update(...)
"gorm.io" -> "PostgreSQL": SQL
"PostgreSQL" --> "gorm.io": Result
"gorm.io" --> "storage.Payment": error
"storage.Payment" --> "payment.Resource": error
"payment.Resource" --> "payment.Handler": error
"payment.Handler" --> "gin-gonic/gin": models.JSONAPISuccessObject
"gin-gonic/gin" --> "nginx": HTTP 202 Accepted
"nginx" --> Client: HTTP 202 Accepted

participant Client order 10
participant "nginx" order 15
participant "gin-gonic/gin" order 20
participant "main.FakeAuthentication" order 25
participant "payment.Handler" order 30
participant "payment.Resource" order 40
participant "payment.transformToDB" order 45
participant "validation" order 46
participant "storage.Payment" order 50
participant "gorm.io" order 60
participant "PostgreSQL" order 70
@enduml
